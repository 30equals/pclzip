<?php

/**
 * @file
 * Pclzip module file
 *
 * This module enables downloading of files and images as one zip.
 *
 */

/**
 * Display help and module information
 */
function pclzip_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#pclzip":
      $output = '<p>' . t('PclZip integration (see <a href="http://www.phpconcept.net/pclzip/index.en.php" target="_blank">the author\'s website</a> )') . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function pclzip_menu() {
  $items = array();

  $items['admin/settings/pclzip'] = array(
    'title'  =>  'Pclzip',
    'description'  =>  'Settings for the pclzip module.',
    'page callback'  =>  'drupal_get_form',
    'page arguments'  =>  array('pclzip_settings'),
    'access arguments'  =>  array('administer site configuration'),
    'type'  =>  MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Admin settings
 */
function pclzip_settings() {

  $form = array();
  
  if (pclzip_library_exists()) {
    //drupal_set_message(t('Library is installed'));
    $options = array(
      'image' =>  'image',
      'file'  =>  'file',
    );

    // Get the field names.
    $form['pclzip_fields_fieldset'] = array(
      '#type'  =>  'fieldset',
      '#title'  =>  t('Available fields'),
      '#collapsible'  =>  TRUE,
      '#collapsed'  =>  TRUE,
    );
    $form['pclzip_fields_fieldset']['pclzip_available_fields'] = array(
        '#type'  =>  'checkboxes',
        '#title'  =>  t('Available fields.'),
        '#options' => $options,
        '#default_value'  =>  variable_get('pclzip_available_fields', $options),
        '#description'  =>  t("Check the fields to use with pclzip sub modules."),
    );
  }
  if (count($form)) {
    return system_settings_form($form);
  }
}

/**
 * Check if the library exists.
 */
function pclzip_library_exists() {
  $pclzip_path = libraries_get_path('pclzip.lib.php');
  if (!is_file($pclzip_path)) {
    drupal_set_message(t('Could not find the PclZip library file : @pclzip_path', array('@pclzip_path' => $pclzip_path)), 'error');
    return FALSE;
  }
  return TRUE;
}

/*
 * Get extra fields form.
 */
function pclzip_get_fields() {
  // Get the fields names.
  $fields_names = array();
  $defaults = array(
      'image' =>  'image',
      'file'  =>  'file',
    );
  $result = db_query("SELECT field_name FROM {field_config} WHERE type IN (:files)",array(':files'  =>  variable_get('pclzip_available_fields', $defaults)));
  foreach ($result as $field) {
    $fields_names[$field->field_name] = $field->field_name;
  }
  return $fields_names;
}

/*
 * Build archive.
 */
function pclzip_build_archive($filename) {
  // Get the temp file.
  global $_pclzip_temp_file;
  $_pclzip_temp_file = tempnam(file_directory_temp(), $filename);
  // Build the archive.
  require_once(libraries_get_path('pclzip.lib.php'));
  return new PclZip($_pclzip_temp_file);
}

/**
 * Send the file.
 */
function pclzip_send_file($filename) {
  global $_pclzip_temp_file;
  // Send the file.
  header('Content-Type: application/zip');
  header('Content-Disposition: inline; filename=' . $filename);
  header("Content-Transfer-Encoding: binary");
  header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
  header('Pragma: public');
  header("Expires: 0");
  header("Content-Length: " . filesize($_pclzip_temp_file));
  readfile($_pclzip_temp_file);
  exit;
}